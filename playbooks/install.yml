---
  - name: Deploy telegram bot GuessMu 3.0.
    hosts: all
    become: yes

    vars_files:
      - vars/api_config.yml
      - vars/install_config.yml
      
    tasks:
      - name: Download git repository.
        git:
            repo: https://github.com/ihnashchenka/TelegramBot.git
            dest: "{{ install_dir }}/{{ module_name }}"
            force: yes
   
      - name: Install libpq-dev to build libs for PostgreSQL.
        apt:
            name: libpq-dev
            update_cache: yes 
                
      - name: Install pip.
      
        apt:
            name: python3-pip
            update_cache: yes
            
      - name: Install python packages from requirenment.txt.
        pip:
            requirements: "{{ install_dir }}/{{ module_name }}/requirements.txt"
          
      - name: Create log directory.
        file:
            path: "{{ log_path }}/{{ module_name }}"
            state: directory
        
      - name: Archive previous log files.
        copy:
            dest: "{{ item }}.1"
            src: "{{ item }}"
            remote_src: yes
        with_items:
        - "{{ log_path }}/{{ module_name }}/{{ stdout_filename }}"
        - "{{ log_path }}/{{ module_name }}/{{ stderr_filename }}"
        #in case log files don't exist the step fails
        #nothing to archive them in this case
        #step can be ignored
        ignore_errors: yes 
        
      - name: Create log files.
        file:
            path: "{{ item }}"
            state: touch
        with_items:
        - "{{ log_path }}/{{ module_name }}/{{ stdout_filename }}"
        - "{{ log_path }}/{{ module_name }}/{{ stderr_filename }}"
        
      - name: Create bot service file.
        copy:
            dest: "{{ service_dir }}/{{ module_name }}.service"
            content: |
                [Service]
                ExecStart={{ python_dir }} {{ install_dir }}/{{ module_name }}/bot.py polling
                Environment=TELEGRAM_TOKEN={{  TELEGRAM_TOKEN  }}
                Environment=DATABASE_URL={{  DATABASE_URL  }}
                StandardOutput=file:{{ log_path }}/{{ module_name }}/{{ stdout_filename }}
                StandardError=file:{{ log_path }}/{{ module_name }}/{{ stderr_filename }}
                [Install]
                WantedBy=multi-user.target
                
      - name: Start the bot.
        service:
            name: "{{ module_name }}"
            state: restarted
    